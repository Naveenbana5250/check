# .github/workflows/build-push-sign-and-deploy.yml
name: Build, Sign, Enforce, Test, Deploy
on:
  push:
    branches: [ "main" ]
jobs:
  supply-chain:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/leviathan-app:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/leviathan-app:${{ github.sha }}

      - run: echo "IMAGE=${{ secrets.DOCKERHUB_USERNAME }}/leviathan-app@${{ steps.build.outputs.digest }}" >> $GITHUB_ENV

      - uses: sigstore/cosign-installer@v3.5.0
      - run: |
          printf '%s\n' "${{ secrets.COSIGN_PRIVATE_KEY }}" > cosign.key
          printf '%s\n' "${{ secrets.COSIGN_PUBLIC_KEY }}" > cosign.pub

      - name: Sign image
        env:
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
        run: cosign sign --key cosign.key --yes "$IMAGE"

      - name: Verify signature
        run: cosign verify --key cosign.pub "$IMAGE"

      - uses: azure/setup-kubectl@v4
      - uses: azure/setup-helm@v4
      - name: Configure cluster and install Kyverno
        run: |
          echo "${{ secrets.KUBECONFIG_CONTENT }}" > kubeconfig
          export KUBECONFIG=$PWD/kubeconfig
          helm repo add kyverno https://kyverno.github.io/kyverno/
          helm repo update
          helm upgrade --install kyverno kyverno/kyverno \
            --namespace kyverno --create-namespace \
            --set webhook.failurePolicy=Fail --wait
          kubectl -n kyverno create secret generic cosign-pub \
            --from-file=cosign.pub=./cosign.pub \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Apply Kyverno policy
        run: |
          export KUBECONFIG=$PWD/kubeconfig
          kubectl apply -f require-signing-policy.yaml

      - name: Negative test (unsigned must be blocked)
        run: |
          set +e
          export KUBECONFIG=$PWD/kubeconfig
          kubectl run unsigned-test --image=nginx:1.25-alpine --restart=Never
          rc=$?
          if [ $rc -eq 0 ]; then
            echo "Unsigned image was allowed but should be blocked"
            kubectl delete pod unsigned-test --force --grace-period=0 || true
            exit 1
          else
            echo "Unsigned image correctly blocked"
          fi
          set -e

      - name: Deploy signed workload
        run: |
          export KUBECONFIG=$PWD/kubeconfig
          kubectl apply -f deployment.yaml

      - name: Cleanup keys
        if: always()
        run: rm -f cosign.key cosign.pub kubeconfig
